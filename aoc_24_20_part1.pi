% https://adventofcode.com/2024/day/20, part-1

main([File]) =>
    Ls = read_file_lines(File),
    M = {to_array(L) : L in Ls, L=['#'|_]},
    NRows = len(M),
    NCols = len(M[1]),
    between(2,NRows,Rs),
    between(2,NCols,Cs),
    M[Rs,Cs] == 'S',
    between(2,NRows,Re),
    between(2,NCols,Ce),
    M[Re,Ce] == 'E',
    !,
    DistM = new_array(NRows,NCols),
    num_tracks_in_path(Rs,Cs,Re,Ce,1,M,NRows,NCols,DistM),
    Count = 0,
    foreach (R in 1..NRows, C in 1..NCols, nonvar(DistM[R,C]))
        Count := Count + count(R,C,M,NRows,NCols,DistM)
    end,
    println(Count).

% possible because there is only one path
num_tracks_in_path(R,C,R,C,I,M,NRows,NCols,DistM) =>
    DistM[R,C] = I.
num_tracks_in_path(R,C,Re,Ce,I,M,NRows,NCols,DistM) =>
    DistM[R,C] = I,
    next_track(R,C,M,NRows,NCols,DistM,R1,C1),
    num_tracks_in_path(R1,C1,Re,Ce,I+1,M,NRows,NCols,DistM).

next_track(R,C,M,NRows,NCols,DistM,R1,C1) =>
    neibs(R,C,NRows,NCols,Neibs),
    member((R1,C1), Neibs),
    M[R1,C1] != '#',
    var(DistM[R1,C1]),!.

neibs(R,C,NRows,NCols,Neibs) =>
    Neibs = [Neib : Neib in [(R,C-1), (R,C+1), (R-1,C), (R+1,C)],
                    Neib = (R1,C1),
                    R1 >= 1, R1 =< NRows, C1 >= 1, C1 =< NCols].

count(R,C,M,NRows,NCols,DistM) = Count =>
    Sum = 0,
    foreach ((Dr,Dc) in [(0,-1), (0,1), (-1,0), (1,0)])
        Sum := Sum + cond(save100(Dr,Dc,R,C,M,NRows,NCols,DistM), 1, 0)
    end,
    Count = Sum.

save100(Dr,Dc,R,C,M,NRows,NCols,DistM) =>
    R1 = R+Dr,
    C1 = C+Dc,
    R1 >= 1, R1 =< NRows, C1 >= 1, C1 =< NCols,
    M[R1,C1] == '#',
    R2 = R1+Dr,
    C2 = C1+Dc,
    R2 >= 1, R2 =< NRows, C2 >= 1, C2 =< NCols,
    nonvar(DistM[R2,C2]),
    DistM[R2,C2]-DistM[R,C]-2 >= 100.


    