% https://adventofcode.com/2024/day/13, part-1
import cp, util.

main([File]) =>
    Lines = read_file_lines(File),
    proc_insts(Lines,0,Count),
    println(Count).

proc_insts([],Count0,Count) => Count = Count0.
proc_insts([Line1,Line2,Line3|Lines],Count0,Count), append("Button A: ",R1,Line1) =>
    [['X','+'|PAx],[' ','Y','+'|PAy]] = split(R1, ","),
    append("Button B: ",R2,Line2),
    [['X','+'|PBx],[' ','Y','+'|PBy]] = split(R2, ","),
    append("Prize: ",R3,Line3),
    [['X','='|Tx],[' ','Y','='|Ty]] = split(R3, ","),
    win(to_int(PAx), to_int(PAy), to_int(PBx), to_int(PBy), to_int(Tx), to_int(Ty), NTokens),
    Count1 = Count0+NTokens,
    proc_insts(Lines,Count1,Count).
proc_insts([_|Lines],Count0,Count) =>
    proc_insts(Lines,Count0,Count).

win(PAx, PAy, PBx, PBy, Tx, Ty, NTokens) ?=>
    UB = max(Tx,Ty),
    Na :: 0..UB,
    Nb :: 0..UB,
    Na*PAx + Nb*PBx #= Tx,
    Na*PAy + Nb*PBy #= Ty,
    NTokens #= 3*Na+Nb,
    solve($[min(NTokens)],[Na,Nb]).
win(PAx, PAy, PBx, PBy, Tx, Ty, NTokens) =>
    NTokens = 0.
    
   
   
   
        

