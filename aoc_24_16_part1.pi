% https://adventofcode.com/2024/day/16, part-1
import planner.

main([File]) =>
    Ls = read_file_lines(File),
    M = {to_array(L) : L in Ls, L=['#'|_]},
    NRows = len(M),
    NCols = len(M[1]),
    between(2,NRows,Rs),
    between(2,NCols,Cs),
    M[Rs,Cs] == 'S',
    between(2,NRows,Re),
    between(2,NCols,Ce),
    M[Re,Ce] == 'E',
    !,
    Dr = 0, Dc = 1,   % east
    best_plan_unbounded([Dr,Dc,Rs,Cs,Re,Ce|M],_,Cost),
    println(Cost).
    
final([Dr,Dc,R,C,R,C|M]) => true.

action([Dr,Dc,R,C,Re,Ce|M],NextS,Action,Cost) ?=>
    turn(Dr,Dc,Dr1,Dc1),
    NextS = [Dr1,Dc1,R,C,Re,Ce|M],
    Action = rotate,
    Cost = 1000.
action([Dr,Dc,R,C,Re,Ce|M],NextS,Action,Cost) =>
    R1 = R+Dr,
    C1 = C+Dc,
    M[R1,C1] !== '#',
    NextS = [Dr,Dc,R1,C1,Re,Ce|M],    
    Action = move,
    Cost = 1.

% rotate 
turn(-1,0,0,1).
turn(-1,0,0,-1).
turn(0,1,1,0).
turn(0,1,-1,0).
turn(1,0,0,1).
turn(1,0,0,-1).
turn(0,-1,1,0).
turn(0,-1,-1,0).

